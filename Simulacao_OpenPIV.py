# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aA0gMxUoAXAO-Yq-7LzkMBCBrFBVL8e0
"""

!pip install openpiv numpy matplotlib opencv-python

import cv2;
import numpy as np;
import matplotlib.pylab as plt;
from openpiv import pyprocess, piv

from typing import overload

from google.colab import drive
drive.mount('/content/drive')

video = cv2.VideoCapture('/content/drive/MyDrive/simulacao/videoplayback.mp4')

sucesso, imagem1 = video.read()
contador = 0
U=[]
V=[]

if sucesso:
  print("Primeiro frame capturado com sucesso")

else:
  print("Erro ao capturar o primeiro frame, o programa não pode prosseguir")

while sucesso and contador < 10:

  sucesso, imagem2 = video.read();

  if sucesso:
    # extended_search_area_piv irá calcular o capo de velocidade a partir do frame inicial e do frame do loop
    u,v,s2n = pyprocess.extended_search_area_piv(imagem1.sum(axis=2),imagem2.sum(axis=2),window_size=64,overlap=32)
    # Imprime o s2n para a iteração atual
    print(f"Iteração {contador + 1}: s2n = {s2n.mean():.4f}")  # Média de s2n para uma visão geral
    x,y = pyprocess.get_coordinates(imagem1.shape[:2],search_area_size=64,overlap=32)
    imagem1 = imagem2.copy()
    contador +=1
    U.append(u)
    V.append(v)



#Exibir video na interface, seja Jupyter Notebook ou Collab

from IPython.display import HTML

# Exibir o vídeo utilizando a tag <video>
HTML("""
    <video alt="test" controls width="640">
        <source src="/content/drive/MyDrive/simulacao/videoplayback.mp4" type="video/mp4">
    </video>
""")


U = np.stack(U)
Umean = np.mean(U,axis =0)
V = np.stack(V)
Vmean = np.mean(V,axis =0)


fig,ax = plt.subplots(figsize=(8,16))
ax.imshow(imagem1,alpha=0.7)
Q= ax.quiver(x,y,Umean,Vmean,Umean**2+Vmean**2,scale=50, width=.007)
# plt.show()
plt.plot(np.mean(Umean,axis=1)*30,y[:,0],color='r',lw=3)
plt.colorbar(Q, orientation='horizontal')

